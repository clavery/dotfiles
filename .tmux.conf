set-window-option -g utf8 on

set -g prefix C-@
unbind C-b
bind @ send-prefix

# act like vim
setw -g mode-keys vi
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
unbind-key j
bind-key j select-pane -D # Similar to 'C-w j' to navigate windows in Vim
bind-key C-j select-pane -D # Similar to 'C-w j' to navigate windows in Vim
unbind-key k
bind-key k select-pane -U
bind-key C-k select-pane -U
unbind-key h
bind-key h select-pane -L
bind-key C-h select-pane -L
unbind-key l
bind-key l select-pane -R
bind-key C-l select-pane -R

unbind-key s
bind-key s split-window -c "#{pane_current_path}"
bind-key C-s split-window -c "#{pane_current_path}"
bind-key S split-window -c "#{pane_current_path}"
unbind-key v
bind-key C-v split-window -h -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# look good
set -g default-terminal "screen-256color"

bind-key "C-Space" last-window

# detach client
bind-key d detach
bind-key C-d detach

# choose window/session
bind-key '"' choose-window
bind-key "'" choose-session

# display visible indicator of each pane
bind-key w display-panes

bind-key b break-pane

bind-key Left resize-pane -L 5
bind-key Right resize-pane -R 5
bind-key Up resize-pane -U 5
bind-key Down resize-pane -D 5
bind-key C-Left resize-pane -L 5
bind-key C-Right resize-pane -R 5
bind-key C-Up resize-pane -U 5
bind-key C-Down resize-pane -D 5

setw -g mode-keys vi

# enable mouse selection in copy mode
setw -g mode-mouse on

# Screen-like key bindings 

# new window
bind-key C-c new-window -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'

# prev
bind-key BSpace previous-window

# title (default key in tmux is ',')
bind-key r command-prompt "rename-window %%"

# quit
bind-key \ confirm-before kill-server

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
#bind-key C-l refresh-client
#bind-key l refresh-client
bind-key r refresh-client

# default window title colors
setw -g window-status-fg white
setw -g window-status-bg colour238
setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-bg colour110
setw -g window-status-current-fg colour0
setw -g window-status-current-attr dim

# command/message line colors
set -g message-fg red
set -g message-bg black

set -g mode-fg colour232

set-option -s escape-time 0
set-option -g base-index 1

set -g history-limit 10000

set -g pane-border-bg black
set -g pane-border-fg black
set -g pane-active-border-bg colour32
set -g pane-active-border-fg colour32
set-environment -g INSCREEN yes
set-environment TMUX_TITLE yes
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 12

unbind-key .
bind-key . clock-mode

set -g status-right "#[fg=magenta]#(date '+%H:%M')#[default]#[fg=green]#(uptime  | sed 's/.*load average.*://') #[default] #[fg=red]#h#[default]"
set -g status-left "[#24S]"
set -g status-left-length 24
set -g status-justify centre
set -g status-interval 30
# default statusbar colors
set -g status-fg white
set -g status-bg colour238
set -g message-command-fg white
set -g message-command-bg colour236
set -g status-attr default

unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel

unbind C-Left
unbind C-Right
unbind C-Up
unbind C-Down

bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

set-option -g renumber-windows on

set -g xterm-keys on

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
if-shell 'test "$(linux)" = "Darwin"' 'source ~/.tmux-linux.conf'
